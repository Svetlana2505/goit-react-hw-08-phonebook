{"version":3,"file":"static/js/578.e9a8a85c.chunk.js","mappings":"2RAEaA,EAAMC,EAAAA,GAAAA,IAAH,+KAUHC,EAASD,EAAAA,GAAAA,OAAH,yO,SC4DnB,EAhEkB,WAChB,OAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACHV,EAASW,GACT,MACF,IAAK,WACHT,EAAYS,GAKjB,EASD,OACE,+BACE,UAAChB,EAAD,WACa,MAAVQ,IACC,SAACS,EAAA,EAAD,CAAOC,QAAQ,SAASC,SAAS,UAAjC,0CAIF,kBAAMC,SAfS,SAAAC,GACnBA,EAAMC,iBACNX,GAASY,EAAAA,EAAAA,IAAM,CAAEnB,MAAAA,EAAOE,SAAAA,KACxBD,EAAS,IACTE,EAAY,GACb,EAUK,WACE,SAACiB,EAAA,EAAD,CACEC,MAAM,QACNP,QAAQ,WACRQ,KAAK,QACLC,OAAO,QACPC,WAAS,EACTC,KAAK,QACLd,KAAK,QACLC,MAAOZ,EACP0B,SAAUjB,KAEZ,SAACW,EAAA,EAAD,CACEC,MAAM,WACNP,QAAQ,WACRQ,KAAK,QACLC,OAAO,QACPC,WAAS,EACTC,KAAK,WACLd,KAAK,WACLC,MAAOV,EACPwB,SAAUjB,KAGZ,SAACX,EAAD,2BAKT,C","sources":["pages/LoginForm/LoginForm.styled.jsx","pages/LoginForm/LoginForm.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Box = styled.div`\n  /* display: flex;\n  align-items: center; */\n  margin: auto;\n  width: 400px;\n\n  background-color: #fff;\n  margin: auto;\n  padding: 40px 20px;\n`;\nexport const Button = styled.button`\n  width: 100%;\n  height: 35px;\n  background: linear-gradient(\n    45deg,\n    #2f4f4f,\n    #20b2aa,\n    #20b2aa,\n    #48d1cc,\n    #2f4f4f\n  );\n  border: none;\n  color: white;\n  border-radius: 4px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from 'redux/auth/auth-operations';\nimport TextField from '@mui/material/TextField';\nimport { selectError } from 'redux/auth/auth-selectors';\nimport { Alert } from '@mui/material';\nimport { Box, Button } from './LoginForm.styled';\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(login({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <Box>\n        {error === 400 && (\n          <Alert variant=\"filled\" severity=\"warning\">\n            Incorrect email or password\n          </Alert>\n        )}\n        <form onSubmit={handleSubmit}>\n          <TextField\n            label=\"email\"\n            variant=\"outlined\"\n            size=\"small\"\n            margin=\"dense\"\n            fullWidth\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n          <TextField\n            label=\"password\"\n            variant=\"outlined\"\n            size=\"small\"\n            margin=\"dense\"\n            fullWidth\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n\n          <Button>Login</Button>\n        </form>\n      </Box>\n    </>\n  );\n};\nexport default LoginForm;\n"],"names":["Box","styled","Button","useState","email","setEmail","password","setPassword","error","useSelector","selectError","dispatch","useDispatch","handleChange","target","name","value","Alert","variant","severity","onSubmit","event","preventDefault","login","TextField","label","size","margin","fullWidth","type","onChange"],"sourceRoot":""}